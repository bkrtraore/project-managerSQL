REM **********************************************************************
REM Script ORACLE de crÃ©ation du LOT 1
REM **********************************************************************   


ALTER SESSION SET nls_date_format = 'DD/MM/RRRR';

DROP TABLE FONCTION CASCADE CONSTRAINT PURGE;
DROP TABLE PROSPECTEUR CASCADE CONSTRAINT PURGE;
DROP TABLE PROJET CASCADE CONSTRAINT PURGE;
DROP TABLE SEMINAIRE CASCADE CONSTRAINT PURGE;
DROP TABLE ADHERER CASCADE CONSTRAINT PURGE;
DROP TABLE PARTICIPER CASCADE CONSTRAINT PURGE;


DROP SEQUENCE SeqFonction; 
CREATE SEQUENCE SeqFonction START WITH 1 INCREMENT BY 1;

DROP SEQUENCE SeqProspecteur;
CREATE SEQUENCE SeqProspecteur START WITH 1 INCREMENT BY 1;

DROP SEQUENCE SeqProjet;
CREATE SEQUENCE SeqProjet START WITH 1 INCREMENT BY 1;

DROP SEQUENCE SeqSeminaire;
CREATE SEQUENCE SeqSeminaire START WITH 1 INCREMENT BY 1;

CREATE TABLE FONCTION
(
Id_Fonction INTEGER,
Nom_Fonction VARCHAR2(20) CONSTRAINT NN_Nom_Fonction NOT NULL,
Descrip_Fonction VARCHAR2(50),
CONSTRAINT UQ_Nom_Fonction UNIQUE (Nom_Fonction)
);


CREATE TABLE PROSPECTEUR(
Id_Pro INTEGER,
Nom_Pro VARCHAR2(30) CONSTRAINT NN_Nom_Pro NOT NULL,
Prenom_Pro VARCHAR2(30) CONSTRAINT NN_Prenom_Pro NOT NULL,
Adresse_Pro VARCHAR2(50)CONSTRAINT NN_Adresse_Pro NOT NULL,
Tel_Pro VARCHAR2(12)CONSTRAINT NN_Tel_Pro NOT NULL,
Mail_Pro VARCHAR2(40)CONSTRAINT NN_Mail_Pro NOT NULL,
CONSTRAINT UQ_Pro UNIQUE (Nom_Pro, Prenom_Pro)
);


CREATE TABLE PROJET(
Id_Projet INTEGER,
Libelle_Projet VARCHAR2(30) CONSTRAINT NN_Libelle_Projet NOT NULL,
NbAdherent INTEGER,
Budget INTEGER ,
CONSTRAINT UQ_Libelle_Projet UNIQUE(Libelle_Projet)
);


CREATE TABLE SEMINAIRE(
Id_Sem INTEGER,
LibelleSem VARCHAR2(30) CONSTRAINT NN_LibelleSem NOT NULL,
CONSTRAINT UQ_LibelleSem UNIQUE(LibelleSem)
);


CREATE TABLE ADHERER(
Id_Pro INTEGER CONSTRAINT NN_Id_Pro_Adherer NOT NULL,
Id_Projet INTEGER CONSTRAINT NN_Projet_Adherer NOT NULL,
DateAdhesion DATE
);


CREATE TABLE PARTICIPER
(
Id_Pro INTEGER CONSTRAINT NN_Id_Pro_Participer NOT NULL,
Id_Sem INTEGER CONSTRAINT NN_Id_Sem_Participer NOT NULL,
Presence CHAR(1)
);


REM ***** CONTRAINTE FONCTION *****
ALTER TABLE FONCTION
ADD CONSTRAINT PK_ST_Id_Fonction PRIMARY KEY(Id_Fonction);


REM ***** CONTRAINTES PROSPECTEUR *****
ALTER TABLE PROSPECTEUR
ADD(Id_Fonction INTEGER,
	CONSTRAINT PK_ST_Id_Pro PRIMARY KEY(Id_Pro),
	CONSTRAINT FK_ST_Id_Fonction_Prospecteur
	FOREIGN KEY (Id_Fonction)
	REFERENCES FONCTION(Id_Fonction)
	);
	
REM ***** CONTRAINTES PROJET  *****

ALTER TABLE PROJET
ADD(CONSTRAINT PK_ST_Id_Projet PRIMARY KEY(Id_Projet),
	CONSTRAINT CHK_NbAdherent CHECK (NbAdherent >=1),
	CONSTRAINT CHK_Budget CHECK (Budget >=0)
	);

REM ***** CONTRAINTES SEMINAIRE *****

ALTER TABLE SEMINAIRE
ADD(Id_Projet INTEGER,
	CONSTRAINT PK_ST_Id_Sem PRIMARY KEY(Id_Sem),
	CONSTRAINT FK_ST_Id_Projet_Seminaire
	FOREIGN KEY (Id_Projet)
	REFERENCES PROJET(Id_Projet)
	);


REM ***** CONTRAINTES ADHERER *****
ALTER TABLE ADHERER
ADD(CONSTRAINT PK_ST_Adherer PRIMARY KEY(Id_Pro,Id_Projet),
	CONSTRAINT FK_ST_Id_Pro_Adherer 
	FOREIGN KEY (Id_Pro)
	REFERENCES PROSPECTEUR(Id_Pro),
	CONSTRAINT FK_ST_Id_Projet_Adherer
	FOREIGN KEY (Id_Projet)
	REFERENCES PROJET(Id_Projet)
	);
	
REM ***** CONTRAINTES PARTICIPER *****
ALTER TABLE PARTICIPER
ADD(CONSTRAINT PK_ST_Participer PRIMARY KEY(Id_Pro,Id_Sem),
	CONSTRAINT FK_ST_Id_Pro_Participer
	FOREIGN KEY (Id_Pro)
	REFERENCES PROSPECTEUR(Id_Pro),
	CONSTRAINT FK_ST_Id_Sem_Participer
	FOREIGN KEY (Id_Sem)
	REFERENCES SEMINAIRE(Id_Sem)
	);
	

